{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"pygments_lexer":"ipython3","nbconvert_exporter":"python","version":"3.6.4","file_extension":".py","codemirror_mode":{"name":"ipython","version":3},"name":"python","mimetype":"text/x-python"},"colab":{"provenance":[{"file_id":"https://storage.googleapis.com/kaggle-colab-exported-notebooks/cats-vs-dogs-classification-8671f0c3-2210-4eb5-9565-c8c3de2ca850.ipynb?X-Goog-Algorithm=GOOG4-RSA-SHA256&X-Goog-Credential=gcp-kaggle-com%40kaggle-161607.iam.gserviceaccount.com/20240327/auto/storage/goog4_request&X-Goog-Date=20240327T093124Z&X-Goog-Expires=259200&X-Goog-SignedHeaders=host&X-Goog-Signature=38481f59e2298b162483c1e2c57d5b327ebd436f92c82b24601ec9baba5b62afc10804bf863e4792cf203cba147320405df0253ac0148f237fcd8c4f10eb82981cefb316ca840664934efab9968116e538d65ada5892e9530f7b6452e3c30bfd14f815322555f2641a6b50c09385bb7fed4c2fd5e1781581f33bc52a64dfd8b72b8e610e6dfc25c19d3ce9c84c798342988910849260caf690b7f091df4236430874d524868efe4690ac0391f5ae268c73435998145b36e39148a03193dc66f1bba859f44d8e06d86f279b63d7eaf6a09d2a347813c5ebe5738e3dcc5076442d1bb124feed5609b5b422cf9c9e840b105b855c9ea08e210cc5bc27756643ea14","timestamp":1711531892233}],"toc_visible":true}},"nbformat_minor":0,"nbformat":4,"cells":[{"source":["# import os\n","# import sys\n","# from tempfile import NamedTemporaryFile\n","# from urllib.request import urlopen\n","# from urllib.parse import unquote, urlparse\n","# from urllib.error import HTTPError\n","# from zipfile import ZipFile\n","# import tarfile\n","# import shutil"],"metadata":{"id":"njsvrwMWQAma"},"cell_type":"code","outputs":[],"execution_count":null},{"cell_type":"markdown","source":["<div style=\"padding:10px;\n","            color:black;\n","            margin:10px;\n","            font-size:150%;\n","            display:fill;\n","            border-radius:1px;\n","            border-style: solid;\n","            border-color:black;\n","            background-color:gold;\n","            overflow:hidden;\">\n","    <center>\n","        <a id='top'></a>\n","        <b style=\"color:black\">Table of Contents</b>\n","    </center>\n","    <br>\n","    <ul>\n","        <li>\n","            <a href=\"#1\" style=\"color:black\">1 - Imports</a>\n","        </li>\n","        <li>\n","            <a href=\"#2\" style=\"color:black\">2 - Data Preprocessing</a>\n","            <ul>\n","                <li>\n","                    <a href=\"#2-1\" style=\"color:black\">2.1 - Create Directories</a>\n","                </li>\n","                <li>\n","                    <a href=\"#2-2\" style=\"color:black\">2.2 - Creating Generators</a>\n","                </li>\n","            </ul>\n","        </li>\n","        <li>\n","            <a href=\"#3\" style=\"color:black\">3 - Model Implementation</a>\n","        </li>\n","        <li>\n","            <a href=\"#4\" style=\"color:black\">4 - Evaluation</a>\n","            <ul>\n","                <li>\n","                    <a href=\"#4-1\" style=\"color:black\">4.1 - Evaluation on Test Set</a>\n","                </li>\n","                <li>\n","                    <a href=\"#4-2\" style=\"color:black\">4.2 - Visualizing  Predictions</a>\n","                </li>\n","                <li>\n","<a href=\"#4-3\" style=\"color:black\">4.3 - Visualizing Activation Maps</a>\n","</li>\n","<li>\n","<a href=\"#4-4\" style=\"color:black\">4.4 - Visualizing Training Process</a>\n","</li>\n","</ul>\n","</li>\n","<li>\n","<a href=\"#5\" style=\"color:black\">5 - Trying Data Augmentation</a>\n","</li>\n","<li>\n","<a href=\"#6\" style=\"color:black\">6 - Conclusion</a>\n","</li>\n","<li>\n","<a href=\"#7\" style=\"color:black\">7 - Thank You</a>\n","</li>\n","</ul>\n","\n","</div>\n"],"metadata":{"id":"5BvKf4kKQAmd"}},{"cell_type":"markdown","source":["# Imports"],"metadata":{"id":"_teaP5fGQAmf"}},{"cell_type":"code","source":["import os\n","import shutil\n","import numpy as np\n","import pandas as pd\n","import tensorflow as tf\n","import matplotlib.pyplot as plt\n","import random\n","import plotly.express as px\n","import scipy as sp\n","\n","from scipy import ndimage\n","from shutil import copyfile\n","from tensorflow.keras.layers import Conv2D,Add,MaxPooling2D, Dense, BatchNormalization,Input\n","from tensorflow.keras.models import Model\n","from tensorflow.keras.optimizers import Adam\n","from tensorflow.keras.callbacks import LearningRateScheduler\n","from tensorflow.keras.preprocessing.image import ImageDataGenerator\n"],"metadata":{"execution":{"iopub.status.busy":"2023-01-20T17:44:57.129404Z","iopub.execute_input":"2023-01-20T17:44:57.129709Z","iopub.status.idle":"2023-01-20T17:45:03.745485Z","shell.execute_reply.started":"2023-01-20T17:44:57.129681Z","shell.execute_reply":"2023-01-20T17:45:03.744328Z"},"trusted":true,"id":"3cK6Rd0CQAmg"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["<a id=\"2\"></a>\n","<h1 style='background:#FFD700;border:0; color:black;\n","    box-shadow: 10px 10px 5px 0px rgba(0,0,0,0.75);\n","    transform: rotateX(10deg);\n","    '><center style='color: black;'>Data Preprocessing</center></h1>\n","    \n","# Data Preprocessing\n"],"metadata":{"id":"ZiVGjXADQAmg"}},{"cell_type":"markdown","source":["**Let's check the distribution of the data**"],"metadata":{"id":"xtfJpD8FQAmh"}},{"cell_type":"code","source":["class_names = ['Cat', 'Dog']\n","\n","n_dogs = len(os.listdir('/kaggle/input/microsoft-catsvsdogs-dataset/PetImages/Dog'))\n","n_cats = len(os.listdir('/kaggle/input/microsoft-catsvsdogs-dataset/PetImages/Cat'))\n","n_images = [n_cats, n_dogs]\n","px.pie(names=class_names, values=n_images)"],"metadata":{"execution":{"iopub.status.busy":"2022-11-26T03:05:53.240209Z","iopub.execute_input":"2022-11-26T03:05:53.2406Z","iopub.status.idle":"2022-11-26T03:05:55.54998Z","shell.execute_reply.started":"2022-11-26T03:05:53.240559Z","shell.execute_reply":"2022-11-26T03:05:55.548978Z"},"trusted":true,"id":"dyD-f2KUQAmh"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**Great the data is perfectly balanced**"],"metadata":{"id":"Mk3EhvhqQAmh"}},{"cell_type":"markdown","source":["<a name=\"2-1\"></a>\n","## create directories for training and validation"],"metadata":{"id":"-le5iaiOQAmi"}},{"cell_type":"code","source":["try:\n","    os.mkdir('/tmp/cats-v-dogs')\n","    os.mkdir('/tmp/cats-v-dogs/training')\n","    os.mkdir('/tmp/cats-v-dogs/validation')\n","    os.mkdir('/tmp/cats-v-dogs/test')\n","    os.mkdir('/tmp/cats-v-dogs/training/cats')\n","    os.mkdir('/tmp/cats-v-dogs/training/dogs')\n","    os.mkdir('/tmp/cats-v-dogs/validation/cats')\n","    os.mkdir('/tmp/cats-v-dogs/validation/dogs')\n","    os.mkdir('/tmp/cats-v-dogs/test/cats')\n","    os.mkdir('/tmp/cats-v-dogs/test/dogs')\n","except OSError:\n","    print('Error failed to make directory')"],"metadata":{"execution":{"iopub.status.busy":"2022-11-26T03:05:55.552353Z","iopub.execute_input":"2022-11-26T03:05:55.552629Z","iopub.status.idle":"2022-11-26T03:05:55.562278Z","shell.execute_reply.started":"2022-11-26T03:05:55.552603Z","shell.execute_reply":"2022-11-26T03:05:55.561279Z"},"trusted":true,"id":"KSVmS9spQAmi"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Define data path\n","CAT_DIR = '/kaggle/input/microsoft-catsvsdogs-dataset/PetImages/Cat'\n","DOG_DIR = '/kaggle/input/microsoft-catsvsdogs-dataset/PetImages/Dog'\n","\n","TRAINING_DIR = \"/tmp/cats-v-dogs/training/\"\n","VALIDATION_DIR = \"/tmp/cats-v-dogs/validation/\"\n","\n","TRAINING_CATS = os.path.join(TRAINING_DIR, \"cats/\")\n","VALIDATION_CATS = os.path.join(VALIDATION_DIR, \"cats/\")\n","\n","TRAINING_DOGS = os.path.join(TRAINING_DIR, \"dogs/\")\n","VALIDATION_DOGS = os.path.join(VALIDATION_DIR, \"dogs/\")\n","\n","# Define whether to include test split or not\n","INCLUDE_TEST = True"],"metadata":{"execution":{"iopub.status.busy":"2022-11-26T03:05:55.566568Z","iopub.execute_input":"2022-11-26T03:05:55.566862Z","iopub.status.idle":"2022-11-26T03:05:55.576711Z","shell.execute_reply.started":"2022-11-26T03:05:55.566823Z","shell.execute_reply":"2022-11-26T03:05:55.575818Z"},"trusted":true,"id":"hjCCfprjQAmi"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(len(os.listdir('/tmp/cats-v-dogs/training/cats')))\n","print(len(os.listdir('/tmp/cats-v-dogs/training/dogs')))\n","\n","print(len(os.listdir('/tmp/cats-v-dogs/validation/cats')))\n","print(len(os.listdir('/tmp/cats-v-dogs/validation/dogs')))\n","\n","print(len(os.listdir('/tmp/cats-v-dogs/test/cats')))\n","print(len(os.listdir('/tmp/cats-v-dogs/test/dogs')))"],"metadata":{"execution":{"iopub.status.busy":"2022-11-26T03:05:55.57969Z","iopub.execute_input":"2022-11-26T03:05:55.580024Z","iopub.status.idle":"2022-11-26T03:05:55.591511Z","shell.execute_reply.started":"2022-11-26T03:05:55.579999Z","shell.execute_reply":"2022-11-26T03:05:55.590417Z"},"trusted":true,"id":"0O4uF0m4QAmj"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**Now let's create  a function to split the   data**"],"metadata":{"id":"msRdigyIQAmj"}},{"cell_type":"code","source":["def split_data(main_dir, training_dir, validation_dir, test_dir=None, include_test_split = True,  split_size=0.9):\n","    \"\"\"\n","    Splits the data into train validation and test sets (optional)\n","\n","    Args:\n","    main_dir (string):  path containing the images\n","    training_dir (string):  path to be used for training\n","    validation_dir (string):  path to be used for validation\n","    test_dir (string):  path to be used for test\n","    include_test_split (boolen):  whether to include a test split or not\n","    split_size (float): size of the dataset to be used for training\n","    \"\"\"\n","    files = []\n","    for file in os.listdir(main_dir):\n","        if  os.path.getsize(os.path.join(main_dir, file)): # check if the file's size isn't 0\n","            files.append(file) # appends file name to a list\n","\n","    shuffled_files = random.sample(files,  len(files)) # shuffles the data\n","    split = int(0.9 * len(shuffled_files)) #the training split casted into int for numeric rounding\n","    train = shuffled_files[:split] #training split\n","    split_valid_test = int(split + (len(shuffled_files)-split)/2)\n","\n","    if include_test_split:\n","        validation = shuffled_files[split:split_valid_test] # validation split\n","        test = shuffled_files[split_valid_test:]\n","    else:\n","        validation = shuffled_files[split:]\n","\n","    for element in train:\n","        copyfile(os.path.join(main_dir,  element), os.path.join(training_dir, element)) # copy files into training directory\n","\n","    for element in validation:\n","        copyfile(os.path.join(main_dir,  element), os.path.join(validation_dir, element))# copy files into validation directory\n","\n","    if include_test_split:\n","        for element in test:\n","            copyfile(os.path.join(main_dir,  element), os.path.join(test_dir, element)) # copy files into test directory\n","    print(\"Split sucessful!\")"],"metadata":{"execution":{"iopub.status.busy":"2022-11-26T03:05:55.594197Z","iopub.execute_input":"2022-11-26T03:05:55.594658Z","iopub.status.idle":"2022-11-26T03:05:55.607313Z","shell.execute_reply.started":"2022-11-26T03:05:55.594623Z","shell.execute_reply":"2022-11-26T03:05:55.606363Z"},"trusted":true,"id":"ofNiAhW0QAmj"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**Now let's call the function to create the  training/validation data**"],"metadata":{"id":"zIKL9A72QAmj"}},{"cell_type":"code","source":["split_data(CAT_DIR, '/tmp/cats-v-dogs/training/cats', '/tmp/cats-v-dogs/validation/cats', '/tmp/cats-v-dogs/test/cats',INCLUDE_TEST, 0.9)\n","split_data(DOG_DIR, '/tmp/cats-v-dogs/training/dogs', '/tmp/cats-v-dogs/validation/dogs','/tmp/cats-v-dogs/test/dogs',INCLUDE_TEST, 0.9)"],"metadata":{"execution":{"iopub.status.busy":"2022-11-26T03:05:55.608736Z","iopub.execute_input":"2022-11-26T03:05:55.609234Z","iopub.status.idle":"2022-11-26T03:10:27.944339Z","shell.execute_reply.started":"2022-11-26T03:05:55.609199Z","shell.execute_reply":"2022-11-26T03:10:27.943283Z"},"trusted":true,"id":"vAalUsjfQAmk"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**As a sanity check let's check the data directories**"],"metadata":{"id":"Ct2UGx4ZQAmk"}},{"cell_type":"code","source":["print(len(os.listdir('/tmp/cats-v-dogs/training/cats')))\n","print(len(os.listdir('/tmp/cats-v-dogs/training/dogs')))\n","\n","print(len(os.listdir('/tmp/cats-v-dogs/validation/cats')))\n","print(len(os.listdir('/tmp/cats-v-dogs/validation/dogs')))\n","\n","\n","print(len(os.listdir('/tmp/cats-v-dogs/test/cats')))\n","print(len(os.listdir('/tmp/cats-v-dogs/test/dogs')))"],"metadata":{"execution":{"iopub.status.busy":"2022-11-26T03:10:27.945748Z","iopub.execute_input":"2022-11-26T03:10:27.946466Z","iopub.status.idle":"2022-11-26T03:10:27.968504Z","shell.execute_reply.started":"2022-11-26T03:10:27.946426Z","shell.execute_reply":"2022-11-26T03:10:27.967256Z"},"trusted":true,"id":"NT7oJ_lvQAmk"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["<a name=\"2-2\"></a>\n","\n","## Create Generators"],"metadata":{"id":"0lQoR2bNQAmk"}},{"cell_type":"code","source":["train_gen = ImageDataGenerator(\n","        rescale=1./255)\n","\n","\n","validation_gen =  ImageDataGenerator(\n","        rescale=1./255.)\n","\n","if INCLUDE_TEST:\n","    test_gen =  ImageDataGenerator(\n","            rescale=1./255.)\n"],"metadata":{"execution":{"iopub.status.busy":"2022-11-26T03:10:27.970087Z","iopub.execute_input":"2022-11-26T03:10:27.970474Z","iopub.status.idle":"2022-11-26T03:10:27.976382Z","shell.execute_reply.started":"2022-11-26T03:10:27.970438Z","shell.execute_reply":"2022-11-26T03:10:27.975383Z"},"trusted":true,"id":"8wE_rHiaQAmk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train_generator = train_gen.flow_from_directory(\n","        '/tmp/cats-v-dogs/training',\n","        target_size=(150, 150),\n","        batch_size=64,\n","        class_mode='binary')\n","validation_generator = validation_gen.flow_from_directory(\n","        '/tmp/cats-v-dogs/validation',\n","        target_size=(150, 150),\n","        batch_size=64,\n","        class_mode='binary')\n","\n","if INCLUDE_TEST:\n","    test_generator = test_gen.flow_from_directory(\n","        '/tmp/cats-v-dogs/validation',\n","        target_size=(150, 150),\n","        batch_size=64,\n","        class_mode='binary')"],"metadata":{"execution":{"iopub.status.busy":"2022-11-26T03:10:27.980465Z","iopub.execute_input":"2022-11-26T03:10:27.981211Z","iopub.status.idle":"2022-11-26T03:10:28.687508Z","shell.execute_reply.started":"2022-11-26T03:10:27.981172Z","shell.execute_reply":"2022-11-26T03:10:28.686422Z"},"trusted":true,"id":"CiC9sVA-QAmk"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**Now let's make sure we got the correct data**"],"metadata":{"id":"Opile03YQAml"}},{"cell_type":"code","source":["class_names = ['Cat', 'Dog']\n","def plot_data(generator, n_images):\n","    \"\"\"\n","    Plots random data from dataset\n","    Args:\n","    generator: a generator instance\n","    n_images : number of images to plot\n","    \"\"\"\n","    i = 1\n","    images, labels = generator.next()\n","    labels = labels.astype('int32')\n","\n","    plt.figure(figsize=(14, 15))\n","\n","    for image, label in zip(images, labels):\n","        plt.subplot(4, 3, i)\n","        plt.imshow(image)\n","        plt.title(class_names[label])\n","        plt.axis('off')\n","        i += 1\n","        if i == n_images:\n","            break\n","\n","    plt.show()"],"metadata":{"execution":{"iopub.status.busy":"2022-11-26T03:10:28.689201Z","iopub.execute_input":"2022-11-26T03:10:28.68961Z","iopub.status.idle":"2022-11-26T03:10:28.698929Z","shell.execute_reply.started":"2022-11-26T03:10:28.68957Z","shell.execute_reply":"2022-11-26T03:10:28.696802Z"},"trusted":true,"id":"CQPxw_C7QAml"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plot_data(train_generator,7)\n"],"metadata":{"execution":{"iopub.status.busy":"2022-11-26T03:10:28.70058Z","iopub.execute_input":"2022-11-26T03:10:28.701341Z","iopub.status.idle":"2022-11-26T03:10:29.442265Z","shell.execute_reply.started":"2022-11-26T03:10:28.701301Z","shell.execute_reply":"2022-11-26T03:10:29.441236Z"},"trusted":true,"id":"iuUbLwsDQAml"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plot_data(validation_generator,7)\n"],"metadata":{"execution":{"iopub.status.busy":"2022-11-26T03:10:29.443236Z","iopub.execute_input":"2022-11-26T03:10:29.443547Z","iopub.status.idle":"2022-11-26T03:10:30.308677Z","shell.execute_reply.started":"2022-11-26T03:10:29.443518Z","shell.execute_reply":"2022-11-26T03:10:30.307822Z"},"trusted":true,"id":"haA9X07oQAml"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["if INCLUDE_TEST:\n","    plot_data(test_generator, 10)"],"metadata":{"execution":{"iopub.status.busy":"2022-11-26T03:10:30.310256Z","iopub.execute_input":"2022-11-26T03:10:30.31132Z","iopub.status.idle":"2022-11-26T03:10:31.148461Z","shell.execute_reply.started":"2022-11-26T03:10:30.311276Z","shell.execute_reply":"2022-11-26T03:10:31.145701Z"},"trusted":true,"id":"3QS8A0NBQAml"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**Great, now that the data is ready let's train our model**"],"metadata":{"id":"SKK7QZRuQAml"}},{"cell_type":"markdown","source":["<a id=\"3\"></a>\n","<h1 style='background:#FFD700;border:0; color:black;\n","    box-shadow: 10px 10px 5px 0px rgba(0,0,0,0.75);\n","    transform: rotateX(10deg);\n","    '><center style='color: black;'>Model</center></h1>\n","    \n","# Model\n"],"metadata":{"id":"JfRHrpuRQAml"}},{"cell_type":"code","source":["inputs = tf.keras.layers.Input(shape=(150,150,3))\n","x =  tf.keras.layers.Conv2D(32, (3,3), activation='relu')(inputs)\n","x = tf.keras.layers.Conv2D(64, (3,3), activation='relu')(x)\n","x = tf.keras.layers.MaxPooling2D(2,2)(x)\n","\n","x = tf.keras.layers.Conv2D(64, (3,3), activation='relu')(x)\n","x = tf.keras.layers.Conv2D(128, (3,3), activation='relu')(x)\n","x = tf.keras.layers.MaxPooling2D(2,2)(x)\n","\n","x = tf.keras.layers.Conv2D(128, (3,3), activation='relu')(x)\n","x = tf.keras.layers.Conv2D(256, (3,3), activation='relu')(x)\n","x = tf.keras.layers.GlobalAveragePooling2D()(x)\n","x = Dense(1024,activation='relu')(x)\n","x = tf.keras.layers.Dense(2, activation='softmax')(x)\n","\n","model = Model(inputs=inputs, outputs=x)"],"metadata":{"_kg_hide-output":true,"execution":{"iopub.status.busy":"2022-11-26T03:10:31.149771Z","iopub.execute_input":"2022-11-26T03:10:31.150914Z","iopub.status.idle":"2022-11-26T03:10:36.883Z","shell.execute_reply.started":"2022-11-26T03:10:31.150831Z","shell.execute_reply":"2022-11-26T03:10:36.881909Z"},"trusted":true,"id":"ihHLWRvUQAmm"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model.compile(optimizer=tf.keras.optimizers.RMSprop(learning_rate=0.001),\n","              loss='sparse_categorical_crossentropy',\n","              metrics = ['accuracy'])"],"metadata":{"execution":{"iopub.status.busy":"2022-11-26T03:10:36.884656Z","iopub.execute_input":"2022-11-26T03:10:36.885064Z","iopub.status.idle":"2022-11-26T03:10:36.905958Z","shell.execute_reply.started":"2022-11-26T03:10:36.885028Z","shell.execute_reply":"2022-11-26T03:10:36.904892Z"},"trusted":true,"id":"FcS1vBoMQAmm"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","r = model.fit(\n","        train_generator,\n","        epochs=10,#Training longer could yield better results\n","        validation_data=validation_generator)"],"metadata":{"execution":{"iopub.status.busy":"2022-11-26T03:10:36.907257Z","iopub.execute_input":"2022-11-26T03:10:36.907653Z","iopub.status.idle":"2022-11-26T03:25:36.430395Z","shell.execute_reply.started":"2022-11-26T03:10:36.907614Z","shell.execute_reply":"2022-11-26T03:25:36.42933Z"},"trusted":true,"id":"dREoeiAbQAmm"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["<a id=\"4\"></a>\n","<h1 style='background:#FFD700;border:0; color:black;\n","    box-shadow: 10px 10px 5px 0px rgba(0,0,0,0.75);\n","    transform: rotateX(10deg);\n","    '><center style='color: black;'>Evaluation</center></h1>\n","    \n","# Evaluation\n"],"metadata":{"id":"hQnZeMHOQAmm"}},{"cell_type":"markdown","source":["<a name=\"4-1\"></a>\n","\n","## Evaluate the model on the test set"],"metadata":{"id":"iA_dqAVlQAmm"}},{"cell_type":"code","source":["if INCLUDE_TEST:\n","    model.evaluate(test_generator)"],"metadata":{"execution":{"iopub.status.busy":"2022-11-25T19:19:12.627627Z","iopub.execute_input":"2022-11-25T19:19:12.628493Z","iopub.status.idle":"2022-11-25T19:19:23.106209Z","shell.execute_reply.started":"2022-11-25T19:19:12.628448Z","shell.execute_reply":"2022-11-25T19:19:23.105033Z"},"trusted":true,"id":"BQN1rPlfQAmn"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["<a name=\"4-2\"></a>\n","\n","## Visualize the predicitons"],"metadata":{"id":"1tTVOnonQAmn"}},{"cell_type":"code","source":["def plot_prediction(generator, n_images):\n","    \"\"\"\n","    Test the model on random predictions\n","    Args:\n","    generator: a generator instance\n","    n_images : number of images to plot\n","\n","    \"\"\"\n","    i = 1\n","    # Get the images and the labels from the generator\n","    images, labels = generator.next()\n","    # Gets the model predictions\n","    preds = model.predict(images)\n","    predictions = np.argmax(preds, axis=1)\n","    labels = labels.astype('int32')\n","    plt.figure(figsize=(14, 15))\n","    for image, label in zip(images, labels):\n","        plt.subplot(4, 3, i)\n","        plt.imshow(image)\n","        if predictions[i] == labels[i]:\n","            title_obj = plt.title(class_names[label])\n","            plt.setp(title_obj, color='g')\n","            plt.axis('off')\n","        else:\n","            title_obj = plt.title(class_names[label])\n","            plt.setp(title_obj, color='r')\n","            plt.axis('off')\n","        i += 1\n","        if i == n_images:\n","            break\n","\n","    plt.show()"],"metadata":{"execution":{"iopub.status.busy":"2022-11-25T19:19:23.107897Z","iopub.execute_input":"2022-11-25T19:19:23.108615Z","iopub.status.idle":"2022-11-25T19:19:23.119388Z","shell.execute_reply.started":"2022-11-25T19:19:23.108575Z","shell.execute_reply":"2022-11-25T19:19:23.118143Z"},"trusted":true,"id":"lv2z2AfoQAmn"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["if INCLUDE_TEST:\n","    plot_prediction(test_generator, 10)"],"metadata":{"execution":{"iopub.status.busy":"2022-11-25T19:19:23.121106Z","iopub.execute_input":"2022-11-25T19:19:23.121984Z","iopub.status.idle":"2022-11-25T19:19:25.3991Z","shell.execute_reply.started":"2022-11-25T19:19:23.121937Z","shell.execute_reply":"2022-11-25T19:19:25.398141Z"},"trusted":true,"id":"yt6mrchLQAmn"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plot_prediction(validation_generator, 10)"],"metadata":{"execution":{"iopub.status.busy":"2022-11-25T19:19:25.400665Z","iopub.execute_input":"2022-11-25T19:19:25.401313Z","iopub.status.idle":"2022-11-25T19:19:26.648937Z","shell.execute_reply.started":"2022-11-25T19:19:25.401271Z","shell.execute_reply":"2022-11-25T19:19:26.647946Z"},"trusted":true,"id":"PzbuiiK4QAmn"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["<a name=\"4-3\"></a>\n","\n","## Visualize class activation maps"],"metadata":{"id":"oP4gv8L7QAmo"}},{"cell_type":"code","source":["# Create a  model to visualize activation maps\n","gp_weights =  model.get_layer('dense').get_weights()[0]\n","activation_model = Model(model.inputs, outputs=(model.get_layer('conv2d_5').output, model.get_layer('dense_1').output))"],"metadata":{"execution":{"iopub.status.busy":"2022-11-26T03:45:23.937665Z","iopub.execute_input":"2022-11-26T03:45:23.938035Z","iopub.status.idle":"2022-11-26T03:45:23.949974Z","shell.execute_reply.started":"2022-11-26T03:45:23.938004Z","shell.execute_reply":"2022-11-26T03:45:23.949061Z"},"trusted":true,"id":"n1gTOeo1QAms"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Use the model to make predictions on the test generator\n","images, _ = test_generator.next()\n","features, results = activation_model.predict(images)"],"metadata":{"execution":{"iopub.status.busy":"2022-11-26T04:44:04.303699Z","iopub.execute_input":"2022-11-26T04:44:04.304387Z","iopub.status.idle":"2022-11-26T04:44:04.821256Z","shell.execute_reply.started":"2022-11-26T04:44:04.30435Z","shell.execute_reply":"2022-11-26T04:44:04.820173Z"},"trusted":true,"id":"DQa5xhkjQAmt"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def show_cam(image_index, features, results):\n","    \"\"\"\n","    Shows activation maps\n","    Args:\n","    image_index: index of image\n","    features: the extracted features\n","    results: model's predictions\n","    \"\"\"\n","    # takes the features of the chosen image\n","    features_for_img = features[image_index,:,:,:]\n","\n","    # get the class with the highest output probability\n","    prediction = np.argmax(results[image_index])\n","\n","    # get the gap weights at the predicted class\n","    class_activation_weights = gp_weights[:,prediction]\n","\n","    # upsample the features to the image's original size (150 x 150)\n","    class_activation_features = sp.ndimage.zoom(features_for_img, (150/30, 150/30, 1), order=2)\n","\n","    # compute the intensity of each feature in the CAM\n","    cam_output  = np.dot(class_activation_features,class_activation_weights)\n","\n","    print('Predicted Class = ' +str(class_names[prediction])+ ', Probability = ' + str(results[image_index][prediction]))\n","\n","    # show the upsampled image\n","\n","    plt.imshow(images[image_index])\n","\n","    # strongly classified (95% probability) images will be in green, else red\n","    if results[image_index][prediction]>0.95:\n","        cmap_str = 'Greens'\n","    else:\n","        cmap_str = 'Blues'\n","\n","    # overlay the cam output\n","    plt.imshow(cam_output, cmap=cmap_str, alpha=0.5)\n","\n","    # display the image\n","    plt.show()"],"metadata":{"execution":{"iopub.status.busy":"2022-11-26T04:50:13.584566Z","iopub.execute_input":"2022-11-26T04:50:13.584946Z","iopub.status.idle":"2022-11-26T04:50:13.593467Z","shell.execute_reply.started":"2022-11-26T04:50:13.584913Z","shell.execute_reply":"2022-11-26T04:50:13.592358Z"},"trusted":true,"id":"netUzGLfQAmt"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def show_maps(desired_class, num_maps):\n","    '''\n","    goes through the first 10,000 test images and generates Cam activation maps\n","    Args:\n","    desired_class: class to show the maps for\n","    num_maps: number of maps to be generated\n","    '''\n","    counter = 0\n","    # go through the first 10000 images\n","    for i in range(0,10000):\n","        # break if we already displayed the specified number of maps\n","        if counter == num_maps:\n","            break\n","\n","        # images that match the class will be shown\n","        if np.argmax(results[i]) == desired_class:\n","            counter += 1\n","            show_cam(i,features, results)"],"metadata":{"execution":{"iopub.status.busy":"2022-11-26T04:50:13.886987Z","iopub.execute_input":"2022-11-26T04:50:13.887336Z","iopub.status.idle":"2022-11-26T04:50:13.893779Z","shell.execute_reply.started":"2022-11-26T04:50:13.887307Z","shell.execute_reply":"2022-11-26T04:50:13.892656Z"},"trusted":true,"id":"ylm9gtypQAmt"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["show_maps(desired_class=1, num_maps=5)"],"metadata":{"execution":{"iopub.status.busy":"2022-11-26T04:50:14.510692Z","iopub.execute_input":"2022-11-26T04:50:14.51139Z","iopub.status.idle":"2022-11-26T04:50:21.052708Z","shell.execute_reply.started":"2022-11-26T04:50:14.511353Z","shell.execute_reply":"2022-11-26T04:50:21.051776Z"},"trusted":true,"id":"3spz3tTzQAmt"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["show_maps(desired_class=0, num_maps=5)"],"metadata":{"execution":{"iopub.status.busy":"2022-11-26T04:50:25.45789Z","iopub.execute_input":"2022-11-26T04:50:25.458274Z","iopub.status.idle":"2022-11-26T04:50:31.588762Z","shell.execute_reply.started":"2022-11-26T04:50:25.458243Z","shell.execute_reply":"2022-11-26T04:50:31.586123Z"},"trusted":true,"id":"PCghk3E-QAmt"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["<a name=\"4-4\"></a>\n","\n","## Visualize training process"],"metadata":{"id":"1w1iE_K9QAmt"}},{"cell_type":"code","source":["results = pd.DataFrame(r.history)\n","results.tail()"],"metadata":{"execution":{"iopub.status.busy":"2022-11-25T19:19:27.011126Z","iopub.status.idle":"2022-11-25T19:19:27.011676Z","shell.execute_reply.started":"2022-11-25T19:19:27.011386Z","shell.execute_reply":"2022-11-25T19:19:27.011411Z"},"trusted":true,"id":"ySCIkZD5QAmu"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["fig = px.line(results,y=[results['accuracy'],results['val_accuracy']],template=\"seaborn\",color_discrete_sequence=['#fad25a','red'])\n","fig.update_layout(\n","    title_font_color=\"#fad25a\",\n","    xaxis=dict(color=\"#fad25a\",title='Epochs'),\n","    yaxis=dict(color=\"#fad25a\")\n"," )\n","fig.show()"],"metadata":{"execution":{"iopub.status.busy":"2022-11-25T16:22:53.996832Z","iopub.execute_input":"2022-11-25T16:22:53.997915Z","iopub.status.idle":"2022-11-25T16:22:54.195525Z","shell.execute_reply.started":"2022-11-25T16:22:53.997876Z","shell.execute_reply":"2022-11-25T16:22:54.194404Z"},"trusted":true,"id":"g51Gl37eQAmu"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["fig = px.line(results,y=[results['loss'],results['val_loss']],template=\"seaborn\",color_discrete_sequence=['#fad25a','red'])\n","fig.update_layout(\n","    title_font_color=\"#fad25a\",\n","    xaxis=dict(color=\"#fad25a\",title='Epochs'),\n","    yaxis=dict(color=\"#fad25a\")\n"," )\n","fig.show()"],"metadata":{"execution":{"iopub.status.busy":"2022-11-25T16:22:54.197304Z","iopub.execute_input":"2022-11-25T16:22:54.19768Z","iopub.status.idle":"2022-11-25T16:22:54.265898Z","shell.execute_reply.started":"2022-11-25T16:22:54.197643Z","shell.execute_reply":"2022-11-25T16:22:54.264988Z"},"trusted":true,"id":"qRzZOiERQAmu"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["\n","\n","**Let's try using data augmentation**"],"metadata":{"id":"WC3caUV0QAmu"}},{"cell_type":"markdown","source":["<a id=\"5\"></a>\n","<h1 style='background:#FFD700;border:0; color:black;\n","    box-shadow: 10px 10px 5px 0px rgba(0,0,0,0.75);\n","    transform: rotateX(10deg);\n","    '><center style='color: black;'>Trying Data Augmentation </center></h1>\n","\n","# Trying Data Augmentation"],"metadata":{"id":"Jf5mkunVQAmv"}},{"cell_type":"code","source":["train_gen_aug = ImageDataGenerator(\n","        rescale=1./255,fill_mode='nearest',horizontal_flip=True,\n","        rotation_range=20,\n","    width_shift_range=0.2,\n","    height_shift_range=0.2,\n",")\n","\n","\n","validation_gen_aug =  ImageDataGenerator(\n","        rescale=1./255.)\n"],"metadata":{"execution":{"iopub.status.busy":"2022-11-25T16:22:54.267166Z","iopub.execute_input":"2022-11-25T16:22:54.268775Z","iopub.status.idle":"2022-11-25T16:22:54.274563Z","shell.execute_reply.started":"2022-11-25T16:22:54.268728Z","shell.execute_reply":"2022-11-25T16:22:54.273316Z"},"trusted":true,"id":"t41DfuKtQAmv"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train_generator = train_gen_aug.flow_from_directory(\n","        '/tmp/cats-v-dogs/training',\n","        target_size=(150, 150),\n","        batch_size=32,\n","        class_mode='binary')\n","validation_generator = validation_gen_aug.flow_from_directory(\n","        '/tmp/cats-v-dogs/validation',\n","        target_size=(150, 150),\n","        batch_size=32,\n","        class_mode='binary')"],"metadata":{"trusted":true,"id":"mASPhzt-QAmv"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["inputs = tf.keras.layers.Input(shape=(150,150,3))\n","x =  tf.keras.layers.Conv2D(32, (3,3), activation='relu')(inputs)\n","x = tf.keras.layers.Conv2D(64, (3,3), activation='relu')(x)\n","x = tf.keras.layers.MaxPooling2D(2,2)(x)\n","\n","x = tf.keras.layers.Conv2D(64, (3,3), activation='relu')(x)\n","x = tf.keras.layers.Conv2D(128, (3,3), activation='relu')(x)\n","x = tf.keras.layers.MaxPooling2D(2,2)(x)\n","\n","x = tf.keras.layers.Conv2D(128, (3,3), activation='relu')(x)\n","x = tf.keras.layers.Conv2D(256, (3,3), activation='relu')(x)\n","x = tf.keras.layers.MaxPooling2D(2,2)(x)\n","\n","\n","x = tf.keras.layers.Flatten()(x)\n","x = tf.keras.layers.Dense(1024, activation='relu')(x)\n","x = tf.keras.layers.Dense(2, activation='softmax')(x)\n","\n","model_aug = Model(inputs=inputs, outputs=x)"],"metadata":{"trusted":true,"id":"yD1xfVNVQAmv"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model_aug.compile(optimizer=tf.keras.optimizers.RMSprop(learning_rate=0.001),\n","              loss='sparse_categorical_crossentropy',\n","              metrics = ['accuracy'])"],"metadata":{"trusted":true,"id":"UNuoBaOgQAmw"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["r = model_aug.fit(\n","        train_generator,\n","        epochs=10,#Training longer could yield better results\n","        validation_data=validation_generator)"],"metadata":{"trusted":true,"id":"83vQ02J7QAmw"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["results = pd.DataFrame(r.history)\n","results.tail()"],"metadata":{"id":"tvgFFLofQAmw"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["fig = px.line(results,y=[results['accuracy'],results['val_accuracy']],template=\"seaborn\",color_discrete_sequence=['#fad25a','red'])\n","fig.update_layout(\n","    title_font_color=\"#fad25a\",\n","    xaxis=dict(color=\"#fad25a\",title='Epochs'),\n","    yaxis=dict(color=\"#fad25a\")\n"," )\n","fig.show()"],"metadata":{"trusted":true,"id":"IwufacOoQAmw"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["fig = px.line(results,y=[results['loss'],results['val_loss']],template=\"seaborn\",color_discrete_sequence=['#fad25a','red'])\n","fig.update_layout(\n","    title_font_color=\"#fad25a\",\n","    xaxis=dict(color=\"#fad25a\",title='Epochs'),\n","    yaxis=dict(color=\"#fad25a\")\n"," )\n","fig.show()"],"metadata":{"trusted":true,"id":"4e7JztShQAmx"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["<a id=\"5\"></a>\n","<h1 style='background:#FFD700;border:0; color:black;\n","    box-shadow: 10px 10px 5px 0px rgba(0,0,0,0.75);\n","    transform: rotateX(10deg);\n","    '><center style='color: black;'>Conclusion </center></h1>\n","\n","# Conclusion"],"metadata":{"id":"Q_VFJrQBQAmx"}},{"cell_type":"markdown","source":["**Using data augmentation with these hyper-parameters gave us worse results**\n","\n","\n","**We can Use [transfer learning](https://www.kaggle.com/code/fareselmenshawii/introdution-to-transfer-learning/edit/run/109466477) or a more complex architecture to solve this problem**\n","\n","**We'll discuss these topics in later notebooks**"],"metadata":{"id":"9SrYnIZrQAmx"}},{"cell_type":"markdown","source":["<a id=\"7\"></a>\n","<h1 style='background:#FFD700;border:0; color:black;\n","    box-shadow: 10px 10px 5px 0px rgba(0,0,0,0.75);\n","    transform: rotateX(10deg);\n","    '><center style='color: black;'>Thank You </center></h1>\n","\n","\n","    \n","# Thank You\n","\n","**Thank you for taking your time and going through this notebook**\n","\n","**Please let me know if you have any feedback**"],"metadata":{"id":"UAmCk97OQAmx"}}]}